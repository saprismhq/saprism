// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider = "prisma-zod-generator"
  output   = "../shared/zod"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  sid    String   @id @db.VarChar(255)
  sess   Json
  expire DateTime

  @@index([expire], map: "IDX_session_expire")
  @@map("sessions")
}

model User {
  id              String    @id @db.VarChar(255)
  email           String?   @unique @db.VarChar(255)
  firstName       String?   @map("first_name") @db.VarChar(255)
  lastName        String?   @map("last_name") @db.VarChar(255)
  profileImageUrl String?   @map("profile_image_url") @db.VarChar(255)
  createdAt       DateTime  @default(now()) @map("created_at")
  updatedAt       DateTime  @default(now()) @updatedAt @map("updated_at")

  // Relations
  meetings Meeting[]
  clients  Client[]

  @@map("users")
}

model Client {
  id               Int      @id @default(autoincrement())
  userId           String   @map("user_id") @db.VarChar(255)
  name             String   @db.VarChar(255) // Contact person name
  company          String   @db.VarChar(255) // Company name (now required)
  email            String?  @db.VarChar(255)
  phone            String?  @db.VarChar(255)
  industry         String?  @db.VarChar(255)
  salesMethodology String?  @map("sales_methodology") @db.VarChar(255)
  notes            String?  @db.Text
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @default(now()) @updatedAt @map("updated_at")

  // Relations
  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  meetings Meeting[]

  // Indexes for performance optimization
  @@index([userId], map: "IDX_clients_user_id")
  @@index([userId, createdAt], map: "IDX_clients_user_recent")
  @@map("clients")
}

model Meeting {
  id            Int       @id @default(autoincrement())
  userId        String    @map("user_id") @db.VarChar(255)
  clientId      Int?      @map("client_id")
  clientName    String    @map("client_name") @db.VarChar(255) // Keep for backwards compatibility
  clientCompany String?   @map("client_company") @db.VarChar(255) // Keep for backwards compatibility
  dealType      String    @default("Connect") @map("deal_type") @db.VarChar(100)
  status        String    @default("active") @db.VarChar(50)
  summary       Json?     // AI-generated meeting summary: {pains, progress, nextSteps, keyInsights}
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @default(now()) @updatedAt @map("updated_at")

  // Relations
  user                User                 @relation(fields: [userId], references: [id], onDelete: Cascade)
  client              Client?              @relation(fields: [clientId], references: [id], onDelete: SetNull)
  notes               Note[]
  coachingSuggestions CoachingSuggestion[]
  crmSyncLogs         CrmSyncLog[]
  callSessions        CallSession[]

  // Indexes for performance optimization
  @@index([userId], map: "IDX_meetings_user_id")
  @@index([clientId], map: "IDX_meetings_client_id")
  @@index([userId, createdAt], map: "IDX_meetings_user_recent")
  @@index([userId, status, createdAt(sort: Desc)], map: "IDX_meetings_user_status_recent")
  @@index([status], map: "IDX_meetings_status")
  @@map("meetings")
}

model Note {
  id         Int      @id @default(autoincrement())
  meetingId  Int      @map("meeting_id")
  content    String   @db.Text
  aiAnalysis Json?    @map("ai_analysis")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @default(now()) @updatedAt @map("updated_at")

  // Relations
  meeting Meeting @relation(fields: [meetingId], references: [id], onDelete: Cascade)

  // Indexes for performance optimization
  @@index([meetingId], map: "IDX_notes_meeting_id")
  @@index([meetingId, createdAt], map: "IDX_notes_meeting_recent")
  @@map("notes")
}

model CoachingSuggestion {
  id         Int      @id @default(autoincrement())
  meetingId  Int      @map("meeting_id")
  type       String   @db.VarChar(255)
  content    Json
  isUsed     Boolean? @map("is_used")
  createdAt  DateTime @default(now()) @map("created_at")

  // Relations
  meeting Meeting @relation(fields: [meetingId], references: [id], onDelete: Cascade)

  // Indexes for performance optimization
  @@index([meetingId], map: "IDX_coaching_suggestions_meeting_id")
  @@index([meetingId, createdAt], map: "IDX_coaching_suggestions_meeting_recent")
  @@map("coaching_suggestions")
}

model CrmSyncLog {
  id         Int      @id @default(autoincrement())
  meetingId  Int      @map("meeting_id")
  status     String   @db.VarChar(50)
  syncData   Json?    @map("sync_data")
  error      String?  @db.Text
  createdAt  DateTime @default(now()) @map("created_at")

  // Relations
  meeting Meeting @relation(fields: [meetingId], references: [id], onDelete: Cascade)

  // Indexes for performance optimization
  @@index([meetingId], map: "IDX_crm_sync_logs_meeting_id")
  @@index([meetingId, createdAt(sort: Desc)], map: "IDX_crm_sync_logs_meeting_latest")
  @@index([status], map: "IDX_crm_sync_logs_status")
  @@map("crm_sync_logs")
}

model CallSession {
  id                String    @id @default(cuid())
  meetingId         Int       @map("meeting_id")
  liveKitRoomName   String    @map("livekit_room_name") @db.VarChar(255)
  liveKitToken      String?   @map("livekit_token") @db.Text
  participants      Json      @default("[]")
  status            String    @default("waiting") @db.VarChar(50) // waiting, active, ended, failed
  startedAt         DateTime? @map("started_at")
  endedAt           DateTime? @map("ended_at")
  transcription     Json?     @map("transcription")
  sessionMetadata   Json?     @map("session_metadata")
  createdAt         DateTime  @default(now()) @map("created_at")
  updatedAt         DateTime  @default(now()) @updatedAt @map("updated_at")

  // Relations
  meeting Meeting @relation(fields: [meetingId], references: [id], onDelete: Cascade)

  // Indexes for performance optimization
  @@index([meetingId], map: "IDX_call_sessions_meeting_id")
  @@index([meetingId, status], map: "IDX_call_sessions_meeting_status")
  @@index([status], map: "IDX_call_sessions_status")
  @@index([status, createdAt(sort: Desc)], map: "IDX_call_sessions_status_recent")
  @@map("call_sessions")
}