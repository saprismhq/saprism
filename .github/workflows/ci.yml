name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]

env:
  NODE_ENV: production
  AWS_REGION: us-east-2
  ECR_REPOSITORY: <your-ecr-repo-placeholder> # e.g. <aws_account_id>.dkr.ecr.us-east-1.amazonaws.com/saprism
  ECS_CLUSTER: <your-ecs-cluster-placeholder>
  ECS_SERVICE: <your-ecs-service-placeholder>

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: TypeScript type checking
      run: npm run check

    - name: Run tests
      run: npm run test:ci || true

    - name: Build application
      run: npm run build

  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: TypeScript type checking
      run: npm run check

  security:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Run security audit
      run: npm audit --audit-level high || echo "Security audit completed with warnings"

  docker-build-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: [test, lint, security]
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image
      run: |
        IMAGE_TAG=latest
        SHA_TAG=${GITHUB_SHA::7}
        docker build -t $ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REPOSITORY:$SHA_TAG .
        docker push $ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REPOSITORY:$SHA_TAG

  deploy-prod:
    name: Deploy to ECS (Production)
    runs-on: ubuntu-latest
    needs: docker-build-push
    if: github.event_name == 'release'
    environment:
      name: production
      url: https://<your-prod-url-placeholder>
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Update ECS service
      run: |
        aws ecs update-service \
          --cluster $ECS_CLUSTER \
          --service $ECS_SERVICE \
          --force-new-deployment
